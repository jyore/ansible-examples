#!/usr/bin/env ansible-playbook
---

- name: deploy mezzanine containers
  hosts: vagrant
  become: yes
  become_method: sudo
  gather_facts: True
  vars_files:
    - secrets.yml
  vars:
    database_name: mezzanine
    database_user: mezzanine
    database_port: 5432
    gunicorn_port: 8000
    docker_host: "{{ lookup('env', 'DOCKER_HOST') | regex_replace('^tcp://(.*):\\d+$','\\\\1') | default('localhost',true)}}"
    project_dir: /srv/project
    website_domain: "{{ docker_host }}"
    mezzanine_env:
      SECRET_KEY: "{{ secret_key }}"
      NEVERCACHE_KEY: "{{ nevercache_key }}"
      ALLOWED_HOSTS: "*"
      DATABASE_NAME: "{{ database_name }}"
      DATABASE_USER: "{{ database_user }}"
      DATABASE_PASSWORD: "{{ database_password }}"
      DATABASE_HOST: "{{ database_host }}"
      DATABASE_PORT: "{{ database_port }}"
      GUNICORN_PORT: "{{ gunicorn_port }}"
    setadmin_env:
      PROJECT_DIR: "{{ project_dir }}"
      ADMIN_PASSWORD: "{{ admin_password }}"
    setsite_env:
      PROJECT_DIR: "{{ project_dir }}"
      WEBSITE_DOMAIN: "{{ website_domain }}"

  tasks:
    - name: start postgres
      docker:
        image: jyore/mezzanine-docker:postgresql
        name: postgres
        publish_all_ports: True
        env:
          POSTGRES_USER: "{{ database_user }}"
          POSTGRES_PASSWORD: "{{ database_password }}"

    - name: capture db ip address and mapped port
      set_fact:
        database_host: "{{ docker_containers[0].NetworkSettings.IPAddress }}"
        mapped_database_port: "{{ docker_containers[0].NetworkSettings.Ports['5432/tcp'][0].HostPort }}"

    - name: wait for database
      wait_for: host={{ docker_host }} port={{ mapped_database_port }}

    - name: initialize database
      docker:
        image: jyore/mezzanine-docker:mezzanine
        command: python manage.py {{ item }} --noinput
        #wait: True
        env: "{{ mezzanine_env }}"
      with_items:
        - syncdb
        - migrate
      register: django

    - name: set the site id
      docker:
        image: jyore/mezzanine-docker:mezzanine
        command: /srv/ansible/files/scripts/setsite.py
        env: "{{ setsite_env.update(mezzanine_env) }}{{ setsite_env }}"
        #wait: yes

    - name: set the admin password
      docker:
        image: jyore/mezzanine-docker:mezzanine
        command: /srv/ansible/files/scripts/setadmin.py
        env: "{{ setadmin_env.update(mezzanine_env) }}{{ setadmin_env }}"
        #wait: yes

    - name: start the memcached container
      docker:
        image: jyore/mezzanine-docker:memcached
        name: memcached

    - name: start the mezzanine container
      docker:
        image: jyore/mezzanine-docker:mezzanine
        env: "{{ mezzanine_env }}"
        links: memcached

    - name: start the mezzanine cron
      docker:
        image: jyore/mezzanine-docker:mezzanine
        name: mezzanine
        env: "{{ mezzanine_env }}"
        command: cron -f

    - name: start the cert container
      docker:
        image: jyore/mezzanine-docker:certs
        name: certs

    - name: run nginx
      docker:
        image: jyore/mezzanine-docker:nginx
        ports:
         - 8080:80
         - 8443:43
        name: nginx
        volumes_from:
          - mezzanine
          - certs
        links: mezzanine
